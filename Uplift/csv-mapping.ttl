@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix dbpedia: <http://dbpedia.org/ontology/> .
@prefix erct: <http://www.semanticweb.org/ERCT/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema/> .
@prefix rrf: <http://kdeg.scss.tcd.ie/ns/rrf#>



<#Concat>
	rrf:functionName "concat" ;
	rrf:functionBody """
		function concat(var1, var2) {
		return var1 + " " + var2 ;
	}
	""" ;
.

<#ExtractJel>
	rrf:functionName "extractJel" ;
	rrf:functionBody """
		function extractJel(var1) {
		if (var1 == null){
		return null;
		}
		//print("1")
		var re = /(\\w\\d\\d){1}/g;
		var output = [];
		while ((match =  re.exec(var1)) !== null) {
 		    //print(match);	
 		    output.push(match[0]);
		}
		//print(output);
		return(String(output));
	} 
	""" ;
.

<#ExtractDate>
	rrf:functionName "extractDate" ;
	rrf:functionBody """
		function extractDate(date) {
		
		    var month = date.slice(0,2);
		    var day = date.slice(3,5);	
		    var year = date.slice(6,10);	
		    //print(month);
		    //print(day);
		    //print(year);
		    newDate = day + "/" + month + "/" + year;
		    //print(newDate);
		    var d = new Date(newDate),
			month = '' + (d.getMonth() + 1),
			day = '' + d.getDate(),
			year = d.getFullYear();
		    //print(d);

		    return d;
}
	""" ;
.

<#ExtractResearcher>
	rrf:functionName "extractResearcher" ;
	rrf:functionBody """
		function extractResearcher(researcher) {
		
		    var re = /[^\\s]+\\s+[^\\s]+/;
		    match =  re.exec(researcher);
		    //print(researcher);
		    //print(match);

		    return String(match);
}
	""" ;
.


<#ExtractEmail>
	rrf:functionName "extractEmail" ;
	rrf:functionBody """
		function extractEmail(researcher) {
		
		    var re = /[^\\s]+[\\w]+\\@[\\w | \\W]+/;
		    match =  re.exec(researcher);
		    print(researcher);
		    print(match);

		    return String(match);
}
	""" ;
.



<#DOITripleMap>
	a rr:TriplesMap ;
	rr:logicalTable [
		rr:sqlQuery """SELECT RCT_ID, DOI FROM trials"""
	] ;
	rr:subjectMap [
		rr:template "http://www.semanticweb.org/publicationInfo/{RCT_ID}" ;
		rr:class erct:publicationInfo ;
	] ;
	rr:predicateObjectMap [
		rr:predicate erct:hasDOI ;
		rr:objectMap [ rr:column "DOI" ];
		rr:class xsd:string ;
	] ;
	.

<#JELTripleMap>
	a rr:TriplesMap ;
	rr:logicalTable [
		rr:sqlQuery """SELECT RCT_ID, DOI, JEL FROM trials"""
	] ;
	rr:subjectMap [
		rr:template "http://www.semanticweb.org/publicationInfo/{RCT_ID}" ;
		rr:class erct:publicationInfo ;
	] ;

	rr:predicateObjectMap [
		rr:predicate erct:hasJELcode ;
		rr:objectMap    [
	        rrf:functionCall [
	 			rrf:function <#ExtractJel> ;
	 			rrf:parameterBindings (
	 				[ rr:column "JEL" ]
	 			) ;
	 		] ; 
	 	]
	] 
	.


<#StartDateTripleMap>
	a rr:TriplesMap ;
	rr:logicalTable [
		rr:sqlQuery """SELECT RCT_ID, SDATE FROM trials"""
	] ;
	rr:subjectMap [
		rr:template "http://www.semanticweb.org/Timespan/{RCT_ID}" ;
		rr:class erct:Timespan ;
	] ;
	rr:predicateObjectMap [
		rr:predicate erct:hasStartDate ;
		rr:objectMap    [
	        rrf:functionCall [
	 			rrf:function <#ExtractDate> ;
	 			rrf:parameterBindings (
	 				[ rr:column "SDATE" ]
	 			) ;
	 		] ; 
	 	]
	] ;
	.
	
	
<#EndDateTripleMap>
	a rr:TriplesMap ;
	rr:logicalTable [
		rr:sqlQuery """SELECT RCT_ID, EDATE FROM trials"""
	] ;
	rr:subjectMap [
		rr:template "http://www.semanticweb.org/Timespan/{RCT_ID}" ;
		rr:class erct:Timespan ;
	] ;
	rr:predicateObjectMap [
		rr:predicate erct:hasEndDate ;
		rr:objectMap    [
	        rrf:functionCall [
	 			rrf:function <#ExtractDate> ;
	 			rrf:parameterBindings (
	 				[ rr:column "EDATE" ]
	 			) ;
	 		] ; 
	 	]
	] ;
	.
	
	

<#ResearcherTripleMap>
	a rr:TriplesMap ;
	rr:logicalTable [
		rr:sqlQuery """SELECT RCT_ID, PRIM FROM trials"""
	] ;
	rr:subjectMap [
		rr:template "http://www.semanticweb.org/Researcher/{RCT_ID}" ;
		rr:class erct:Researcher ;
	] ;
	rr:predicateObjectMap [
		rr:predicate erct:hasName ;
		rr:objectMap    [
	        rrf:functionCall [
	 			rrf:function <#ExtractResearcher> ;
	 			rrf:parameterBindings (
	 				[ rr:column "PRIM" ]
	 			) ;
	 		] ; 
	 	]
	] ;
	.
	
	

<#EmailTripleMap>
	a rr:TriplesMap ;
	rr:logicalTable [
		rr:sqlQuery """SELECT RCT_ID, PRIM FROM trials"""
	] ;
	rr:subjectMap [
		rr:template "http://www.semanticweb.org/Researcher/{RCT_ID}" ;
		rr:class erct:Researcher ;
	] ;
	rr:predicateObjectMap [
		rr:predicate erct:hasEmail ;
		rr:objectMap    [
	        rrf:functionCall [
	 			rrf:function <#ExtractEmail> ;
	 			rrf:parameterBindings (
	 				[ rr:column "PRIM" ]
	 			) ;
	 		] ; 
	 	]
	] ;
	.
